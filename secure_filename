from flask import Flask, render_template, request
import os
from dotenv import load_dotenv
from openai import OpenAI
from werkzeug.utils import secure_filename

load_dotenv()
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'
os.makedirs(app.config['UPLOAD_FOLDER'], exist_ok=True)

@app.route('/', methods=['GET', 'POST'])
def index():
    translated_spanish = ''
    edited_english = ''

    if request.method == 'POST':
        english_text = request.form.get('english', '')

        uploaded_file = request.files.get('file')
        if uploaded_file and uploaded_file.filename:
            filename = secure_filename(uploaded_file.filename)
            filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            uploaded_file.save(filepath)

            with open(filepath, 'r', encoding='utf-8') as f:
                english_text += '\n' + f.read()

        if english_text.strip():
            response = client.chat.completions.create(
                model="gpt-3.5-turbo",
                messages=[{
                    "role": "user",
                    "content": f"Translate this to Spanish: {english_text}"
                }]
            )
            translated_spanish = response.choices[0].message.content

        elif 'spanish' in request.form and request.form['spanish']:
            spanish_text = request.form['spanish']
            response = client.chat.completions.create(
                model="gpt-3.5-turbo",
                messages=[{
                    "role": "user",
                    "content": f"Translate this to English: {spanish_text}"
                }]
            )
            edited_english = response.choices[0].message.content

    return render_template('index.html',
                           translated_spanish=translated_spanish,
                           edited_english=edited_english)

if __name__ == '__main__':
    app.run(debug=True)
